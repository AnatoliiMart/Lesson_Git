#include <iostream>
#include "header.h"

int main()
{
  std::cout << "Lesson" << LESSON << std::endl;
}
/*
    Git - система контроля версий 
    Инструмент (набор консольных программ) для создания и управления 
        "точками восстановления" состояния проэкта.
        Одним из основных терминов является commit - заархивированное
        состояние всех включенных в проэкт файлов.
        Каждый следующий коммит хранит информацию только об изначальном
        по сравнению с предыдущим коммитом.
    По традициям Git репозитории должны содержать только код
        и необходимые зависимости для него. Не должно быть в репозитории:
        - исполнимых файлов (они собираются из кода)
        - промежуточных файлов компиляции (объектный код)
        - отладочной информации 
        - загруженных пакетов (которые можно загрузить отдельно)
        - конфигураций IDE (пути к файлам, компиляторам и т.п.)
        - конфиденциальной информации
        полный перечень сильно зависит от языка програмирования и
        среды разработки (IDE)


    Github - сайт, сетевое хранилище репозиториев.
    Azure DevOps (dev.ops.com)
    BitBucket (https://bitbucket.org)

    Создание репозитория
    Репозиторием является папка, для того чтобы сделать папку 
    репозиторием, ее надо инициализировать  (git init)
    Cоздаем файл исключений (.gitignore) - текстовый файл
    с перечнем того, что НЕ должно сохраняться в коммитах.
    Как правило IDE содержит рекрмендованные файлы, если нет,
    то образцы можно найти в https://github.com/github/gitignore
    (скачать файл для нужного языка, переименовать в .gitignore
    и поместить в корень папки-репозитория)
    Добавляются файлы в репозиторий (git add./)
    Cоздается коммит (git commit -m Initial)
    Происходит работа с файлами, по окончании создается следующий 
    коммит
*/
